name: 'Common Build Action'
description: ''
inputs:
  PackageName:
    description: 'Name of the package'
    required: true
    default: ''
  Version_Full:
    description: 'Version number'
    required: true
    default: '' 
  OutputDirectory:
    description: 'Output Directory where your build artifacts will be stored'
    required: true
    default: ''
  SCSPackageName:
    description: 'Name of the SCS Package'
    required: true
    default: ''
  Sitecore_CM_Url:
    description: ''
    required: true
    default: ''
  Sitecore_CD_Url:
    description: ''
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: list files
      run: dir ${{ github.workspace }}
      shell: pwsh
    
    - name: Create Web Nuget Package
      shell: pwsh
      working-directory: ${{ github.workspace }}\deploy\Sitecore.Deployment\build\scripts
      run: |
        ./CreateNupkgfromdirectory.ps1 -PackageName ${{ inputs.PackageName }} -OutputDirectory "${{ github.workspace }}\deploy\workdir" -InputDirectory "${{ inputs.OutputDirectory }}" -Version "${{ inputs.Version_Full }}"
    
    - name: list files
      run: dir ${{ github.workspace }}\deploy\workdir
      shell: pwsh

    - uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '__'
        tokenSuffix: '__'
        files: '["**/*.yml"]'
      env:
       Sitecore.CM.Url :  ${{ inputs.Sitecore_CM_Url }}
       Sitecore.CD.Url :  ${{ inputs.Sitecore_CD_Url }}
    
    - name: list files
      run: Get-Content '${{ github.workspace }}/Neptune.Project/serialization/Content/content/Neptune Tenant Folder/Neptune Tenant/Neptune/Settings/Site Grouping/Neptune.yml'
      shell: pwsh
    
    - name: list files
      run: Get-Content '${{ github.workspace }}/Neptune.Project/serialization/Content/content/Neptune Tenant Folder/Neptune Tenant/Neptune/Settings/Site Grouping/Neptune-Preview.yml'
      shell: pwsh
       
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Create SCS Package
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        dotnet nuget add source -n Sitecore https://sitecore.myget.org/F/sc-packages/api/v3/index.json
        dotnet tool restore
        dotnet sitecore ser pkg create -o ${{ inputs.SCSPackageName }} -t -v

    - name: Publishing Package Number
      shell: pwsh
      run: |
        Set-Content -Path ${{ github.workspace }}\build.txt -Value "${{ inputs.Version_Full }}"
    
    - name: Add private GitHub registry to NuGet
      shell: pwsh
      run: dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ github.repository_owner }} --password ${{ github.token }}
    
    - name: Push generated package to GitHub registry
      shell: pwsh
      run: |
        dotnet nuget push ${{ github.workspace }}\deploy\workdir\${{ inputs.PackageName }}.*.nupkg --api-key ${{ github.token }} --source github
    
    - uses: actions/upload-artifact@v3
      with:
        name: build.txt
        path: ${{ github.workspace }}\build.txt

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.SCSPackageName }}.itempackage
        path: ${{ github.workspace }}\${{ inputs.SCSPackageName }}.itempackage

    - uses: actions/upload-artifact@v3
      with:
        name: sitecore.json
        path: ${{ github.workspace }}\sitecore.json
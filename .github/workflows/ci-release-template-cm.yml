name: CM Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
      SCSPackageName:
        required: true
        type: string
      nuget_version:
        required: true
        type: string
      PackageName:
        required: true
        type: string
      webapp-name:
        required: true
        type: string
      webapp-type:
        required: true
        type: string
      resource-group-name:
        required: true
        type: string
      cm-url:
        required: true
        type: string
      identity-url:
        required: true
        type: string
      sitecore-clientID:
        required: true
        type: string
      sitecore-clientSecret:
        required: true
        type: string
      ClientName:
        required: true
        type: string
    secrets:
      CLIENT_ID:
        required: true
      CLIENT_SECRET:
        required: true
      SUBSCRIPTION_ID:
        required: true
      TENANT_ID:
        required: true

jobs:
  cm-job:
    name: CM Deployment
    runs-on: windows-latest
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v3
    - name: Download Artifacts
      # id: retrieve-version
      uses: ./.github/actions/Download-Artifacts/
      with:
        nuget_version: ${{ inputs.nuget_version }}
        SCSPackageName: ${{ inputs.SCSPackageName }}
        PackageName: ${{ inputs.PackageName }}
    - uses: Azure/login@v1
      with:
        creds: '{"clientId": ${{ secrets.CLIENT_ID }}, "clientSecret": ${{ secrets.CLIENT_SECRET }},"subscriptionId": ${{ secrets.SUBSCRIPTION_ID }},"tenantId": ${{ secrets.TENANT_ID }}}'
        enable-AzPSSession: true
    - name: 'Stop CM WebAPP'
      uses: azure/powershell@v1
      with:
        inlineScript: Stop-AzWebApp -ResourceGroupName ${{ inputs.resource-group-name }} -Name ${{ inputs.webapp-name }}
        azPSVersion: "latest"
    - uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '__'
        tokenSuffix: '__'
        files: '["**/*.config"]'
      env:
        ClientName: ${{ inputs.ClientName }}

    - uses: azure/webapps-deploy@v2
      name: Deploy Web Package to Web App
      with:
          app-name: ${{ inputs.webapp-name }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ github.workspace }}\${{ inputs.PackageName }}.${{ inputs.nuget_version }}'

    - name: xdt transformation
      uses: azure/powershell@v1
      with:
        inlineScript: ${{ github.workspace }}\deploy\Sitecore.Deployment\build\scripts\XdtTransformation.ps1 -webAppType '${{ inputs.webapp-type }}' -resourceGroupName ${{ inputs.resource-group-name }} -webAppName ${{ inputs.webapp-name }}
        azPSVersion: "latest"
      
        
    - name: 'Start CM WebAPP'
      uses: azure/powershell@v1
      with:
        inlineScript: Start-AzWebApp -ResourceGroupName ${{ inputs.resource-group-name }} -Name ${{ inputs.webapp-name }}
        azPSVersion: "latest"
   
    - name: 'Perform Health Check of CM'
      working-directory: ${{ github.workspace }}\deploy\Sitecore.Deployment\build\scripts
      run: |
        .\healthCheck.ps1 -http_RequestUrl '${{ inputs.cm-url }}/sitecore/service/keepalive.aspx' -http_RequestRetries 100 -http_RequestTimeout 1000 -http_RetrySeconds 30
      shell: pwsh
   
    - name: list dir
      run: dir ${{ github.workspace }}
      shell: pwsh
   
    - name: Install Item Package
      shell: pwsh
      working-directory: ${{ github.workspace }}
      run: |

        #Install sitecore.cli on agent
        dotnet new tool-manifest
        dotnet nuget add source -n Sitecore https://sitecore.myget.org/F/sc-packages/api/v3/index.json
        dotnet tool install Sitecore.CLI --version 5.1.25

        dotnet sitecore --version

        #Sitecore login
        dotnet sitecore login --client-id ${{ inputs.sitecore-clientID }} --client-secret ${{ inputs.sitecore-clientSecret }} --cm ${{ inputs.cm-url }} --authority ${{ inputs.identity-url }} --allow-write true --client-credentials true

        #Install Sitecore Serialization Packages (.itempackages)
        dotnet sitecore ser pkg install -f ${{ inputs.SCSPackageName }} --verbose

        #Push Role Serialization Packages to Sitecore instance
        #Write-Host "Initiating Role Serialization sync"
        #dotnet sitecore ser push
  
    - name: 'Perform Health Check of CM'
      working-directory: ${{ github.workspace }}\deploy\Sitecore.Deployment\build\scripts
      run: |
        .\healthCheck.ps1 -http_RequestUrl '${{ inputs.cm-url }}/sitecore/service/keepalive.aspx' -http_RequestRetries 100 -http_RequestTimeout 1000 -http_RetrySeconds 30
      shell: pwsh

    